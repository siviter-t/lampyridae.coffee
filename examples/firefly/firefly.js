// Generated by CoffeeScript 1.9.3

/*
 * Example usage of lampyridae.coffee
 */

(function() {
  var Settings, addGuiControls, addProperty, canvas, createFireflies, settings, updateFireflies, updateProperty;

  require('particle/firefly');

  canvas = new Lampyridae.Canvas('world');

  Lampyridae.Firefly.prototype.speed = [1, 5];

  Settings = (function() {
    function Settings() {}

    Settings.prototype.fireflies = [];

    Settings.prototype.max_number = 200;

    Settings.prototype.Total = 20;

    Settings.prototype.Bounds = Lampyridae.Firefly.prototype.bound;

    Settings.prototype.Glow = Lampyridae.Firefly.prototype.glow;

    Settings.prototype.Opacity = Lampyridae.Firefly.prototype.opacity;

    Settings.prototype.changeAlpha = function(value) {
      return updateProperty('alpha', value);
    };

    Settings.prototype.changeBound = function(value) {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = settings.max_number; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        results.push(settings.fireflies[i].changeBounds(value));
      }
      return results;
    };

    Settings.prototype.changeGlow = function(value) {
      return updateProperty('glow', value);
    };

    return Settings;

  })();

  settings = new Settings();

  createFireflies = function() {
    var firefly, i, j, ref, results;
    results = [];
    for (i = j = 0, ref = settings.max_number; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      firefly = new Lampyridae.Firefly(canvas);
      results.push(settings.fireflies.push(firefly));
    }
    return results;
  };

  updateProperty = function(property, value) {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = settings.max_number; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push(settings.fireflies[i][property] = value);
    }
    return results;
  };

  addProperty = function(property, value) {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = settings.max_number; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push(settings.fireflies[i][property] = settings.fireflies[i][property] + value);
    }
    return results;
  };

  updateFireflies = function() {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = settings.Total; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push(settings.fireflies[i].update());
    }
    return results;
  };


  /*
   * Lights, camera, action!
   */

  createFireflies();

  canvas.addUpdate(canvas.draw.clear);

  canvas.addUpdate(updateFireflies);

  canvas.animate();


  /*
   * dat.gui
   */

  (addGuiControls = function() {
    var fD, fG, gui;
    gui = new dat.GUI;
    fG = gui.addFolder('General');
    fG.add(settings, 'Total').min(0).max(settings.max_number).step(1);
    fG.add(settings, 'Bounds', ['none', 'hard', 'periodic']).onChange(settings.changeBound);
    fG.open();
    fD = gui.addFolder('Drawing Style');
    fD.add(settings, 'Glow').min(0).max(50).step(1).onChange(settings.changeGlow);
    return fD.add(settings, 'Opacity').min(0).max(1).step(0.05).onChange(settings.changeAlpha);
  })();

}).call(this);
