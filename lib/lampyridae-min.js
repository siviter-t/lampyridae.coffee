(function(){var t,i,n=function(t,i){function n(){this.constructor=t}for(var r in i)e.call(i,r)&&(t[r]=i[r]);return n.prototype=i.prototype,t.prototype=new n,t.__super__=i.prototype,t},e={}.hasOwnProperty;i=function(){var t;if(null==window.Lampyridae)return window.Lampyridae={};throw t=new Error("Lampyridae namespace could not be assigned. Is there a conflict?"),t.name="FatalError",t}(),window.Lampyridae.enableSimpleGlow=!0,window.Lampyridae.timestep=1,window.Lampyridae.PI2=2*Math.PI,window.Lampyridae.bugHueMax=102.72,window.Lampyridae.bugHueMin=65.28,window.Lampyridae.bugSaturation="100%",window.Lampyridae.bugLightness="50%",window.Lampyridae.bugOpacity=.8,window.Lampyridae.bugRadiusMax=3,window.Lampyridae.bugRadiusMin=.5,window.Lampyridae.bugSpeedMin=1,window.Lampyridae.bugSpeedMax=7,window.Lampyridae.bugTurningAngle=.1*Math.PI,window.Lampyridae.Bug,window.Lampyridae.Canvas,window.Lampyridae.Particle,window.Lampyridae.hslToRgb,window.Lampyridae.rand,Lampyridae.Canvas=function(){function i(i,n){if(this.id=i,this.parent=null!=n?n:"body",arguments.length<1)throw new Error("Lampyridae: Canvas requires an #id selector");this.element=document.createElement("canvas"),this.context=this.element.getContext("2d"),this.setID(),this.append(),this.resizeToParent(),$(window).resize(function(t){return function(){return t.resizeToParent()}}(this)),this.draw=new t(this)}return i.prototype.width=function(){return $(this.element).width()},i.prototype.height=function(){return $(this.element).height()},i.prototype.area=function(){return $(this.element).width()*$(this.element).height()},i.prototype.setWidth=function(t){return null==t&&(t=$(this.parent).innerWidth()),$(this.element).width(t).attr("width",t),t},i.prototype.setHeight=function(t){return null==t&&(t=$(this.parent).innerHeight()),$(this.element).height(t).attr("height",t),t},i.prototype.setID=function(t){return this.id=null!=t?t:this.id,$(this.element).attr("id",this.id),this.id},i.prototype.append=function(t){return this.parent=null!=t?t:this.parent,$(this.parent).append(this.element),console.log("Lampyridae: Appended #"+this.id+" to "+this.parent)},i.prototype.resizeToParent=function(){return this.setWidth(),this.setHeight()},i}(),Lampyridae.Canvas.prototype.Draw=t=function(){function t(t){if(this.canvas=t,arguments.length<1)throw new Error("Lampyridae: Draw requires an instance of Canvas");this.ctx=this.canvas.context,console.log("Lampyridae: Initialised 2D drawing object for #"+this.canvas.id+" ")}return t.prototype.clear=function(t,i,n,e){return this.ctx.clearRect(t,i,n,e)},t.prototype.clear=function(){return this.ctx.clearRect(0,0,this.canvas.width(),this.canvas.height())},t.prototype.resetGlobalAlpha=function(){return this.ctx.globalAlpha=1},t.prototype.setGlobalAlpha=function(t){return 0<=t&&t<1?this.ctx.globalAlpha=t:this.resetGlobalAlpha()},t.prototype.beginClose=function(t){return this.ctx.beginPath(),"function"==typeof t&&t(),this.ctx.closePath()},t.prototype.begin=function(){return this.ctx.beginPath()},t.prototype.end=function(){return this.ctx.closePath()},t.prototype.stroke=function(t,i){return this.ctx.strokeStyle=i,this.ctx.lineWidth=t,this.ctx.stroke()},t.prototype.fill=function(t){return this.ctx.fillStyle=t,this.ctx.fill()},t.prototype.glow=function(t,i,n,e){return null==n&&(n=0),null==e&&(e=0),this.canvas.context.shadowOffsetX=n,this.canvas.context.shadowOffsetY=e,this.canvas.context.shadowColor=i,this.canvas.context.shadowBlur=t},t.prototype.arc=function(t,i,n,e,r,a){return null==r&&(r=0),null==a&&(a=!1),this.ctx.arc(t,i,n,r,e,!a)},t.prototype.circle=function(t,i,n){return this.arc(t,i,n,Lampyridae.PI2)},t}(),Lampyridae.hslToRgb=function(t,i,n){var e,r,a,o,s,h;return t=parseFloat(t)/360,i=parseFloat(i)/100,n=parseFloat(n)/100,0===i?h=r=e=n:(a=function(t,i,n){return n<0&&(n+=1),n>1&&(n-=1),n<.5?i:n<1/6?t+6*(i-t)*n:n<2/3?t+(i-t)*(4-6*n):t},s=n<.5?n*(1+i):n+i-n*i,o=2*n-s,h=a(o,s,t+1/3),r=a(o,s,t),e=a(o,s,t-1/3)),[Math.round(255*h),Math.round(255*r),Math.round(255*e)]},Lampyridae.Particle=function(){function t(t,i,n,e,r,a,o){var s,h;this.canvas=t,this.x=i,this.y=n,this.t=e,this.v=r,this.r=a,this.colour=null!=(s=o.colour)?s:"rgb(255, 255, 255)",this.alpha=null!=(h=o.alpha)?h:1}return t.prototype.vx=function(){return this.v*Math.cos(this.t)},t.prototype.vy=function(){return this.v*Math.sin(this.t)},t.prototype.turn=function(t){return null==t&&(t=0),this.t+=t},t.prototype.turnAround=function(){return this.turn(Math.PI)},t.prototype.move=function(){return this.x+=Lampyridae.timestep*this.vx(),this.y+=Lampyridae.timestep*this.vy()},t.prototype.isOutsideCanvas=function(){var t,i;return!(0<=(t=this.x)&&t<=this.canvas.width())||!(0<=(i=this.y)&&i<=this.canvas.height())},t.prototype.applyHardBounds=function(){if(this.isOutsideCanvas())for(this.turnAround();!this.isOutsideCanvas();)this.move;else this.randomTurn();return this.move()},t.prototype.update=function(){return this.move(),this.draw()},t.prototype.draw=function(){return this.canvas.draw.begin(),this.canvas.draw.circle(this.x,this.y,this.r),this.canvas.draw.fill(this.colour),this.canvas.draw.end()},t}(),Lampyridae.Bug=function(t){function i(t,n,e,r,a,o,s,h){var u;if(!(arguments.length>0))throw new Error("Lampyridae: Bug requires a valid Canvas instance to be attached to");null==n&&(n=Lampyridae.rand(0,t.width())),null==e&&(e=Lampyridae.rand(0,t.height())),null==a&&(a=Lampyridae.rand(Lampyridae.bugSpeedMin,Lampyridae.bugSpeedMax)),null==r&&(r=Lampyridae.rand(0,Lampyridae.PI2)),null==o&&(o=Lampyridae.rand(Lampyridae.bugRadiusMin,Lampyridae.bugRadiusMax)),u=Lampyridae.rand(Lampyridae.bugHueMin,Lampyridae.bugHueMax),null==s&&(s=Lampyridae.hslToRgb(u,Lampyridae.bugSaturation,Lampyridae.bugLightness)),s="rgb("+s[0]+", "+s[1]+", "+s[2]+")",null==h&&(h=Lampyridae.bugOpacity),i.__super__.constructor.call(this,t,n,e,r,a,o,{colour:s,alpha:h})}return n(i,t),i.prototype.randomTurn=function(){return this.turn(Lampyridae.bugTurningAngle*(2*Math.random()-1))},i.prototype.fly=function(){return this.applyHardBounds()},i.prototype.update=function(){return this.fly(),this.draw()},i.prototype.draw=function(){return this.canvas.draw.begin(),this.canvas.draw.setGlobalAlpha(this.alpha),Lampyridae.enableSimpleGlow&&this.canvas.draw.glow(2*this.r,this.colour),this.canvas.draw.circle(this.x,this.y,this.r),this.canvas.draw.fill(this.colour),this.canvas.draw.end()},i}(Lampyridae.Particle),Lampyridae.rand=function(t,i){return 0===arguments.length?Math.random():(i-t)*Math.random()+t}}).call(this);